{"version":3,"sources":["/Users/marcin/dev/laboratory-results/client/data/models/index.ts","/Users/marcin/dev/laboratory-results/client/data/models/StudyState.ts","/Users/marcin/dev/laboratory-results/client/axios.ts","/Users/marcin/dev/laboratory-results/client/api/index.web.js","/Users/marcin/dev/laboratory-results/client/data/index.ts","/Users/marcin/dev/laboratory-results/client/components/NetworkErrorBanner.tsx","/Users/marcin/dev/laboratory-results/client/screens/BaseScreen.tsx","/Users/marcin/dev/laboratory-results/client/screens/AddStudyScreen.tsx","/Users/marcin/dev/laboratory-results/client/screens/ModifyStudyScreen.tsx","/Users/marcin/dev/laboratory-results/client/utils/index.ts","/Users/marcin/dev/laboratory-results/client/websocket/index.web.js","/Users/marcin/dev/laboratory-results/client/components/StationDetails.tsx","/Users/marcin/dev/laboratory-results/client/components/StationsView.tsx","/Users/marcin/dev/laboratory-results/client/screens/ResultsScreen.tsx","/Users/marcin/dev/laboratory-results/client/components/StudiesListItem.tsx","/Users/marcin/dev/laboratory-results/client/screens/StudiesScreen.tsx","/Users/marcin/dev/laboratory-results/client/screens/StudyDetailsScreen.tsx","/Users/marcin/dev/laboratory-results/client/providers/NavigationProvider.tsx","/Users/marcin/dev/laboratory-results/client/theming/LightTheme.ts","/Users/marcin/dev/laboratory-results/client/App.tsx","/Users/marcin/dev/laboratory-results/client/web-build/register-service-worker.js","/Users/marcin/dev/laboratory-results/client/node_modules/moment/locale sync /^/.//.*$"],"names":["StudyState","instance","axios","create","baseURL","timeout","getStudies","params","a","async","get","response","data","addStudy","name","post","updateStudy","id","state","put","getStudyResults","page","results","stationId","sensorId","getStudyStations","getStudyStationSensors","NetworkErrorBanner","React","visible","setVisible","message","setMessage","body","setBody","interceptor","interceptors","use","error","Promise","reject","eject","current","Banner","actions","label","onPress","icon","props","Feather","BaseScreen","View","style","flex","children","AddStudyScreen","route","navigation","onSubmit","setName","TextInput","value","onChangeText","Button","mode","goBack","styles","StyleSheet","row","flexDirection","justifyContent","ModifyStudyScreen","study","Enabled","setState","Subheading","moment","created","format","Switch","onValueChange","Disabled","getPageSize","AsyncStorage","getItem","result","setPageSize","pageSize","setItem","toString","__DEV__","window","location","hostname","withTheme","studyId","theme","filterVisible","setFilterVisible","fabOpened","setFabOpened","paginationModalVisible","setPaginationModalVisible","setSensorId","setResults","sensors","setSensors","setPage","totalResults","setTotalResults","totalPages","setTotalPages","loading","setLoading","itemsPerPage","setItemsPerPage","getResults","items","getItemsPerPage","Platform","OS","webSocket","WebSocket","baseUri","startConnection","onmessage","e","item","JSON","parse","pop","cancelConnection","close","getSensors","handleChangeFilter","handleSetItemsPerPage","Menu","onDismiss","anchor","Item","title","Divider","map","key","height","yAccessor","xAccessor","svg","stroke","colors","primary","contentInset","top","bottom","DataTable","Header","Title","numeric","ActivityIndicator","Row","Cell","Pagination","numberOfPages","onPageChange","Math","min","Portal","FAB","Group","open","FontAwesome","onStateChange","Modal","Section","Accordion","left","Icon","Tab","createMaterialTopTabNavigator","StationsView","stations","Navigator","lazy","Screen","ResultsScreen","setStations","getStations","setOptions","headerRight","IconButton","size","color","navigate","length","StudiesListItem","onEditSubmit","useNavigation","TouchableRipple","onLongPress","description","right","baseUrl","api","prod","protocol","host","port","StudiesScreen","setItems","loadData","Linking","openURL","ResultsList","StudyDetailsScreen","Stack","createStackNavigator","NavigationContainer","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","component","options","LightTheme","DefaultTheme","accent","backdrop","App","type","require","navigator","addEventListener","serviceWorker","register","scope","then","info","catch","console","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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Q,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASmG,EAAeC,GACvB,IAAIjO,EAAKkO,EAAsBD,GAC/B,OAAOE,EAAoBnO,GAE5B,SAASkO,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEvG,EAAKoG,GAAM,CACpC,IAAIpH,EAAI,IAAIwH,MAAM,uBAAyBJ,EAAM,KAEjD,MADApH,EAAEyH,KAAO,mBACHzH,EAEP,OAAOgB,EAAIoG,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAK1G,IAEpBmG,EAAeS,QAAUP,EACzBQ,EAAOC,QAAUX,EACjBA,EAAehO,GAAK,M","file":"static/js/app.0cf9d3f1.chunk.js","sourcesContent":["export * from './AddStudyCommand';\nexport * from './AddStudyResultCommand';\nexport * from './GetStudiesQuery';\nexport * from './GetStudyResultsQuery';\nexport * from './GetStudyStationsQuery';\nexport * from './GetStudyStationSensorsQuery';\nexport * from './Study';\nexport * from './Result';\nexport * from './StudyState';\nexport * from './UpdateStudyCommand';\n","export enum StudyState {\n  Enabled = 'Enabled',\n  Disabled = 'Disabled',\n}\n","import axios from 'axios';\n\n//@ts-ignore\nimport baseUrl from './api';\n\nconst instance = axios.create({\n  baseURL: baseUrl,\n  timeout: 10000,\n});\n\nexport { instance as axios };\n","export default '/api';\n","import { axios } from '../axios';\nimport {\n  GetStudiesQuery,\n  AddStudyCommand,\n  UpdateStudyCommand,\n  AddStudyResultCommand,\n  GetStudyResultsQuery,\n  Study,\n  GetStudyStationSensorsQuery,\n} from './models';\nimport { GetStudyStationsQuery } from './models/GetStudyStationsQuery';\nimport { QueryResponse } from './models/QueryResponse';\nimport { Result } from './models/Result';\n\n// GET /api​/studies\nconst getStudies = async (params?: GetStudiesQuery) => {\n  const response = await axios.get<QueryResponse<Study>>('studies', { params });\n  return response.data;\n};\n\n// POST /api/study\nconst addStudy = ({ name }: AddStudyCommand) => axios.post('study', { name });\n\n// PUT /api/study/{id}\nconst updateStudy = ({ id, name, state }: UpdateStudyCommand) =>\n  axios.put(`study/${id}`, { name, state });\n\n// PUT /api/study/{id}/result\nconst addStudyResult = ({ id, stationId, sensorId, value, timestamp }: AddStudyResultCommand) =>\n  axios.put(`study/${id}/result`, { stationId, sensorId, value, timestamp });\n\n// GET /api/study/{id}/results\nconst getStudyResults = async ({\n  id,\n  page,\n  results,\n  stationId,\n  sensorId,\n}: GetStudyResultsQuery) => {\n  const response = await axios.get<QueryResponse<Result>>(`study/${id}/results`, {\n    params: { page, results, stationId, sensorId },\n  });\n  return response.data;\n};\n\n// GET /api/study/{id}/stations\nconst getStudyStations = async ({ id }: GetStudyStationsQuery) => {\n  const response = await axios.get<number[]>(`study/${id}/stations`);\n  return response.data;\n};\n// GET /api/study/{id}/station/{stationId}\nconst getStudyStationSensors = async ({ id, stationId }: GetStudyStationSensorsQuery) => {\n  const response = await axios.get<number[]>(`study/${id}/station/${stationId}/sensors`);\n  return response.data;\n};\n\nexport {\n  getStudies,\n  addStudy,\n  updateStudy,\n  addStudyResult,\n  getStudyResults,\n  getStudyStations,\n  getStudyStationSensors,\n};\n","import { Feather } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Banner } from 'react-native-paper';\n\nimport { axios } from '../axios';\n\nconst NetworkErrorBanner = () => {\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n  const [body, setBody] = React.useState<string>('');\n\n  const interceptor = React.useRef(\n    axios.interceptors.response.use(\n      response => {\n        setBody(response.data);\n        return response;\n      },\n      error => {\n        setVisible(true);\n        setMessage(error.message);\n        return Promise.reject(error);\n      }\n    )\n  );\n\n  React.useEffect(() => {\n    return () => {\n      axios.interceptors.response.eject(interceptor.current);\n    };\n  });\n\n  return (\n    <Banner\n      visible={visible}\n      actions={[\n        {\n          label: 'Ok',\n          onPress: () => setVisible(false),\n        },\n      ]}\n      icon={props => <Feather {...props} name=\"wifi-off\" />}>\n      {`${message}\\n${body}`}\n    </Banner>\n  );\n};\n\nexport default NetworkErrorBanner;\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport NetworkErrorBanner from '../components/NetworkErrorBanner';\n\nconst BaseScreen = props => {\n  return (\n    <View style={{ flex: 1 }}>\n      <NetworkErrorBanner />\n      {props.children}\n    </View>\n  );\n};\n\nexport default BaseScreen;\n","import { RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { TextInput, Button } from 'react-native-paper';\n\nimport { addStudy } from '../data';\nimport { RootStackParamList } from '../providers/NavigationProvider';\nimport BaseScreen from './BaseScreen';\n\ntype AddStudyScreenProps = {\n  route: RouteProp<RootStackParamList, 'AddStudy'>;\n  navigation: StackNavigationProp<RootStackParamList>;\n};\n\nconst AddStudyScreen = ({ route, navigation }: AddStudyScreenProps) => {\n  const { onSubmit } = route.params;\n  const [name, setName] = React.useState<string>('');\n\n  const handleSave = async () => {\n    await addStudy({ name });\n    await onSubmit();\n    navigation.goBack();\n  };\n\n  return (\n    <BaseScreen>\n      <TextInput label=\"Name\" value={name} onChangeText={setName} />\n      <Button icon=\"content-save\" mode=\"contained\" onPress={handleSave}>\n        Save\n      </Button>\n    </BaseScreen>\n  );\n};\n\nexport default AddStudyScreen;\n","import { RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport moment from 'moment';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Subheading, TextInput, Switch, Button } from 'react-native-paper';\n\nimport { updateStudy } from '../data';\nimport { StudyState } from '../data/models';\nimport { RootStackParamList } from '../providers/NavigationProvider';\nimport BaseScreen from './BaseScreen';\n\ntype ModifyStudyScreenProps = {\n  route: RouteProp<RootStackParamList, 'ModifyStudy'>;\n  navigation: StackNavigationProp<RootStackParamList>;\n};\n\nconst ModifyStudyScreen = ({ route, navigation }: ModifyStudyScreenProps) => {\n  const { study, onSubmit } = route.params;\n  const [name, setName] = React.useState<string>(study.name);\n  const [state, setState] = React.useState<StudyState>(study.state || StudyState.Enabled);\n\n  const handleSave = async () => {\n    await updateStudy({ id: study.id, name, state });\n    await onSubmit();\n    navigation.goBack();\n  };\n\n  return (\n    <BaseScreen>\n      <View style={styles.row}>\n        <Subheading>Id</Subheading>\n        <Subheading>{study.id}</Subheading>\n      </View>\n      <View style={styles.row}>\n        <Subheading>Created</Subheading>\n        <Subheading>{moment(study.created).format('DD MMM HH:mm')}</Subheading>\n      </View>\n      <TextInput label=\"Name\" value={name} onChangeText={setName} />\n      <View style={styles.row}>\n        <Subheading>{state}</Subheading>\n        <Switch\n          value={state === StudyState.Enabled}\n          onValueChange={() => {\n            setState(state === StudyState.Enabled ? StudyState.Disabled : StudyState.Enabled);\n          }}\n        />\n      </View>\n      <Button icon=\"content-save\" mode=\"contained\" onPress={handleSave}>\n        Save\n      </Button>\n    </BaseScreen>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n});\n\nexport default ModifyStudyScreen;\n","import { AsyncStorage } from 'react-native';\n\nconst paginationKey = 'pageSize';\n\nexport const getPageSize = async () => {\n  const result = await AsyncStorage.getItem(paginationKey);\n  if (result) return +result;\n  return 5;\n};\n\nexport const setPageSize = (pageSize: number) =>\n  AsyncStorage.setItem(paginationKey, pageSize.toString());\n","export default __DEV__ ? 'ws://localhost:5100/api/ws' : `ws://${window.location.hostname}/api/ws`;\n","import { FontAwesome } from '@expo/vector-icons';\nimport { Theme } from '@react-navigation/native/lib/typescript/src/types';\nimport moment from 'moment';\nimport * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport {\n  DataTable,\n  ActivityIndicator,\n  List,\n  Menu,\n  Button,\n  Divider,\n  withTheme,\n  FAB,\n  Portal,\n  Modal,\n} from 'react-native-paper';\nimport { LineChart, Grid } from 'react-native-svg-charts';\n\nimport { getStudyResults, getStudyStationSensors } from '../data';\nimport { Result } from '../data/models';\nimport { getPageSize, setPageSize } from '../utils';\nimport baseUri from '../websocket';\n\ntype StationDetailsProps = {\n  studyId: string;\n  stationId: number;\n  theme: Theme;\n};\n\nconst StationDetails = ({ studyId, stationId, theme }: StationDetailsProps) => {\n  const [filterVisible, setFilterVisible] = React.useState(false);\n  const [fabOpened, setFabOpened] = React.useState(false);\n  const [paginationModalVisible, setPaginationModalVisible] = React.useState(false);\n  const [sensorId, setSensorId] = React.useState(0);\n  const [results, setResults] = React.useState<Result[]>([]);\n  const [sensors, setSensors] = React.useState<number[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [totalResults, setTotalResults] = React.useState(0);\n  const [totalPages, setTotalPages] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n  const [itemsPerPage, setItemsPerPage] = React.useState(5);\n\n  React.useEffect(() => {\n    getResults();\n  }, [page, sensorId, itemsPerPage]);\n\n  const getResults = async () => {\n    const result = await getStudyResults({\n      id: studyId,\n      page,\n      results: itemsPerPage,\n      stationId,\n      sensorId,\n    });\n    setTotalPages(result.totalPages);\n    setTotalResults(result.totalResults);\n    setResults(result.items);\n    setLoading(false);\n  };\n\n  const getItemsPerPage = async () => {\n    const result = await getPageSize();\n    setItemsPerPage(result);\n  };\n\n  const getSensors = async () => {\n    const result = await getStudyStationSensors({ id: studyId, stationId });\n    setSensors(result);\n  };\n\n  // websockets doesnt work on web due to usecure connection - SSL/TLS setup required on server side\n  if (Platform.OS !== 'web') {\n    const webSocket = React.useRef(\n      new WebSocket(`${baseUri}/studyresults?id=${studyId}&stationId=${stationId}`)\n    );\n    const startConnection = React.useCallback(() => {\n      webSocket.current.onmessage = e => {\n        const item = JSON.parse(e.data) as Result;\n        setResults(items => {\n          items.pop();\n          return [item, ...items];\n        });\n      };\n    }, []);\n\n    const cancelConnection = React.useCallback(() => {\n      webSocket.current.close();\n    }, []);\n\n    React.useEffect(() => {\n      getSensors();\n      getItemsPerPage();\n      startConnection();\n      return () => {\n        cancelConnection();\n      };\n    }, []);\n  }\n\n  const handleRefreshPress = async () => {\n    await getItemsPerPage();\n  };\n\n  const handleChangeFilter = (sensorId: number) => {\n    setSensorId(sensorId);\n    setFilterVisible(false);\n  };\n\n  const handleSetItemsPerPage = async (pageSize: number) => {\n    setItemsPerPage(pageSize);\n    setPaginationModalVisible(false);\n    await setPageSize(pageSize);\n  };\n\n  return (\n    <View>\n      <ScrollView>\n        <Menu\n          visible={filterVisible}\n          onDismiss={() => setFilterVisible(false)}\n          anchor={\n            <Button onPress={() => setFilterVisible(true)}>\n              {sensorId === 0 ? 'All sensors' : `Sensor ${sensorId}`}\n            </Button>\n          }>\n          <Menu.Item onPress={() => handleChangeFilter(0)} title=\"All sensors\" />\n          <Divider />\n          {sensors.map(item => (\n            <Menu.Item\n              key={item}\n              onPress={() => handleChangeFilter(item)}\n              title={`Sensor ${item}`}\n            />\n          ))}\n        </Menu>\n        <LineChart\n          style={{ height: 200 }}\n          data={results}\n          yAccessor={({ item }) => item.value}\n          xAccessor={({ item }) => moment(item.created)}\n          svg={{ stroke: theme.colors.primary }}\n          contentInset={{ top: 20, bottom: 20 }}>\n          <Grid />\n        </LineChart>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Created</DataTable.Title>\n            <DataTable.Title numeric>SensorId</DataTable.Title>\n            <DataTable.Title numeric>Value</DataTable.Title>\n          </DataTable.Header>\n          {loading ? (\n            <ActivityIndicator />\n          ) : (\n            results.map(item => (\n              <DataTable.Row key={item.created}>\n                <DataTable.Cell>{moment(item.created).format('DD MMM YYYY HH:mm')}</DataTable.Cell>\n                <DataTable.Cell numeric>{item.sensorId}</DataTable.Cell>\n                <DataTable.Cell numeric>{item.value}</DataTable.Cell>\n              </DataTable.Row>\n            ))\n          )}\n          <DataTable.Pagination\n            page={page}\n            numberOfPages={totalPages}\n            onPageChange={page => setPage(page)}\n            label={`${page * itemsPerPage + 1} - ${Math.min(\n              page * itemsPerPage + itemsPerPage,\n              totalResults\n            )} of ${totalResults}`}\n          />\n        </DataTable>\n      </ScrollView>\n\n      <Portal>\n        <FAB.Group\n          open={fabOpened}\n          visible\n          icon={props => <FontAwesome {...props} name=\"gears\" />}\n          actions={[\n            {\n              icon: 'counter',\n              label: 'Configure pagination',\n              onPress: () => setPaginationModalVisible(true),\n            },\n\n            { icon: 'refresh', label: 'Refresh list', onPress: handleRefreshPress },\n          ]}\n          onStateChange={({ open }) => setFabOpened(open)}\n        />\n        <Modal visible={paginationModalVisible} onDismiss={() => setPaginationModalVisible(false)}>\n          <List.Section title=\"Pagination\">\n            <List.Accordion\n              title={`${itemsPerPage} items per page`}\n              left={props => <List.Icon {...props} icon=\"folder\" />}>\n              <List.Item onPress={() => handleSetItemsPerPage(5)} title=\"5 items per page\" />\n              <List.Item onPress={() => handleSetItemsPerPage(10)} title=\"10 items per page\" />\n              <List.Item onPress={() => handleSetItemsPerPage(25)} title=\"25 items per page\" />\n              <List.Item onPress={() => handleSetItemsPerPage(50)} title=\"50 items per page\" />\n            </List.Accordion>\n          </List.Section>\n        </Modal>\n      </Portal>\n    </View>\n  );\n};\n\nexport default withTheme(StationDetails);\n","import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport * as React from 'react';\n\nimport StationDetails from './StationDetails';\n\ntype StationsViewProps = {\n  studyId: string;\n  stations: number[];\n};\n\nconst Tab = createMaterialTopTabNavigator();\n\nconst StationsView = ({ stations, studyId }: StationsViewProps) => (\n  <Tab.Navigator lazy>\n    {stations.map(item => (\n      <Tab.Screen key={item} name={`Station ${item}`}>\n        {props => <StationDetails {...props} studyId={studyId} stationId={item} />}\n      </Tab.Screen>\n    ))}\n  </Tab.Navigator>\n);\n\nexport default StationsView;\n","import { RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { IconButton, ActivityIndicator } from 'react-native-paper';\n\nimport StationsView from '../components/StationsView';\nimport { getStudyStations } from '../data';\nimport { RootStackParamList } from '../providers/NavigationProvider';\nimport BaseScreen from './BaseScreen';\n\ntype ResultsScreenProps = {\n  route: RouteProp<RootStackParamList, 'Results'>;\n  navigation: StackNavigationProp<RootStackParamList>;\n};\n\nconst ResultsScreen = ({ route, navigation }: ResultsScreenProps) => {\n  const { study } = route.params;\n\n  const [stations, setStations] = React.useState<number[]>([]);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    getStations();\n  }, []);\n\n  const getStations = async () => {\n    const result = await getStudyStations({ id: study.id });\n    setStations(result);\n    setLoading(false);\n  };\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <IconButton\n          icon=\"content-paste\"\n          size={20}\n          color=\"white\"\n          onPress={() => navigation.navigate('StudyDetails', { study })}\n        />\n      ),\n    });\n  }, []);\n\n  return (\n    <BaseScreen>\n      {loading ? (\n        <ActivityIndicator />\n      ) : (\n        stations.length > 0 && <StationsView stations={stations} studyId={study.id} />\n      )}\n    </BaseScreen>\n  );\n};\n\nexport default ResultsScreen;\n","import { useNavigation } from '@react-navigation/native';\nimport moment from 'moment';\nimport * as React from 'react';\nimport { List, TouchableRipple } from 'react-native-paper';\n\nimport { Study } from '../data/models';\n\ntype StudiesListItemProps = {\n  study: Study;\n  onEditSubmit: () => Promise<void>;\n};\n\nconst StudiesListItem = ({ study, onEditSubmit }: StudiesListItemProps) => {\n  const navigation = useNavigation();\n\n  const handleItemPress = () => {\n    navigation.navigate('Results', { study });\n  };\n\n  const handleItemLongPress = () => {\n    navigation.navigate('ModifyStudy', { study, onSubmit: onEditSubmit });\n  };\n\n  return (\n    <TouchableRipple onPress={handleItemPress} onLongPress={handleItemLongPress}>\n      <List.Item\n        title={study.name}\n        description={moment(study.created).format('DD MMM YYYY HH:mm')}\n        left={props => <List.Icon {...props} icon=\"folder\" />}\n        right={props => <List.Icon {...props} icon=\"chevron-right\" />}\n      />\n    </TouchableRipple>\n  );\n};\n\nexport default StudiesListItem;\n","import { StackNavigationProp } from '@react-navigation/stack';\nimport { Linking } from 'expo';\nimport * as React from 'react';\nimport { FAB, List, ActivityIndicator, IconButton, Portal } from 'react-native-paper';\n\nimport api from '../api/config.json';\nimport StudiesListItem from '../components/StudiesListItem';\nimport { getStudies } from '../data';\nimport { Study } from '../data/models';\nimport { RootStackParamList } from '../providers/NavigationProvider';\nimport BaseScreen from './BaseScreen';\n\nconst baseUrl = __DEV__\n  ? `${api.dev.protocol}//${api.dev.host}:${api.dev.port}`\n  : `${api.prod.protocol}//${api.prod.host}:${api.prod.port}`;\n\ntype StudiesScreenProps = {\n  navigation: StackNavigationProp<RootStackParamList>;\n};\n\nconst StudiesScreen = ({ navigation }: StudiesScreenProps) => {\n  const [fabOpened, setFabOpened] = React.useState<boolean>(false);\n\n  const [items, setItems] = React.useState<Study[]>([]);\n  //todo handle pagination\n  const [page, setPage] = React.useState<number>(0);\n  const [loading, setLoading] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    setLoading(true);\n    const result = await getStudies({ page });\n    setItems(result.items);\n    setLoading(false);\n  };\n\n  const handleAddNewPress = () => {\n    navigation.navigate('AddStudy', { onSubmit: loadData });\n  };\n\n  const handleRefreshPress = () => {\n    // todo handle refresh\n  };\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <IconButton\n          icon=\"professional-hexagon\"\n          size={20}\n          color=\"white\"\n          onPress={() => Linking.openURL(`${baseUrl}/docs`)}\n        />\n      ),\n    });\n  }, []);\n\n  return (\n    <BaseScreen>\n      <List.Section title=\"Studies\">\n        {loading && <ActivityIndicator />}\n        {items.map(item => (\n          <StudiesListItem key={item.created} study={item} onEditSubmit={loadData} />\n        ))}\n      </List.Section>\n      <Portal>\n        <FAB.Group\n          open={fabOpened}\n          visible\n          icon={fabOpened ? 'close' : 'plus'}\n          actions={[\n            { icon: 'plus', label: 'Add new', onPress: handleAddNewPress },\n            { icon: 'refresh', label: 'Refresh list', onPress: handleRefreshPress },\n          ]}\n          onStateChange={({ open }) => setFabOpened(open)}\n        />\n      </Portal>\n    </BaseScreen>\n  );\n};\n\nexport default StudiesScreen;\n","import { FontAwesome } from '@expo/vector-icons';\nimport { RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport moment from 'moment';\nimport * as React from 'react';\nimport { StyleSheet, View, Platform } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport {\n  Subheading,\n  DataTable,\n  ActivityIndicator,\n  Portal,\n  FAB,\n  Modal,\n  List,\n} from 'react-native-paper';\n\nimport { getStudyResults } from '../data';\nimport { Result } from '../data/models';\nimport { RootStackParamList } from '../providers/NavigationProvider';\nimport { getPageSize, setPageSize } from '../utils';\nimport baseUri from '../websocket';\nimport BaseScreen from './BaseScreen';\n\ntype ResultsListProps = {\n  studyId: string;\n};\n\nconst ResultsList = ({ studyId }: ResultsListProps) => {\n  const [itemsPerPage, setItemsPerPage] = React.useState(5);\n  const [fabOpened, setFabOpened] = React.useState(false);\n  const [paginationModalVisible, setPaginationModalVisible] = React.useState(false);\n  const [results, setResults] = React.useState<Result[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [totalResults, setTotalResults] = React.useState(0);\n  const [totalPages, setTotalPages] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    getResults();\n  }, [page, itemsPerPage]);\n\n  const getResults = async () => {\n    const result = await getStudyResults({ id: studyId, page, results: itemsPerPage });\n    setTotalPages(result.totalPages);\n    setTotalResults(result.totalResults);\n    setResults(result.items);\n    setLoading(false);\n  };\n\n  // websockets doesnt work on web due to usecure connection - SSL/TLS setup required on server side\n  if (Platform.OS !== 'web') {\n    const webSocket = React.useRef(new WebSocket(`${baseUri}/studyresults?id=${studyId}`));\n\n    const startConnection = React.useCallback(() => {\n      webSocket.current.onmessage = e => {\n        const item = JSON.parse(e.data) as Result;\n        setResults(items => {\n          items.pop();\n          return [item, ...items];\n        });\n        setTotalResults(totalResults => totalResults + 1);\n      };\n    }, []);\n\n    const cancelConnection = React.useCallback(() => {\n      webSocket.current.close();\n    }, []);\n\n    React.useEffect(() => {\n      getItemsPerPage();\n      startConnection();\n      return () => {\n        cancelConnection();\n      };\n    }, []);\n  }\n\n  const getItemsPerPage = async () => {\n    const result = await getPageSize();\n    setItemsPerPage(result);\n  };\n\n  const handleSetItemsPerPage = async (pageSize: number) => {\n    setItemsPerPage(pageSize);\n    setPaginationModalVisible(false);\n    await setPageSize(pageSize);\n  };\n\n  return (\n    <View>\n      <ScrollView>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Created</DataTable.Title>\n            <DataTable.Title numeric>StationId</DataTable.Title>\n            <DataTable.Title numeric>SensorId</DataTable.Title>\n            <DataTable.Title numeric>Value</DataTable.Title>\n          </DataTable.Header>\n          {loading ? (\n            <ActivityIndicator />\n          ) : (\n            results.map(item => (\n              <DataTable.Row key={item.created}>\n                <DataTable.Cell>{moment(item.created).format('DD MMM HH:mm')}</DataTable.Cell>\n                <DataTable.Cell numeric>{item.stationId}</DataTable.Cell>\n                <DataTable.Cell numeric>{item.sensorId}</DataTable.Cell>\n                <DataTable.Cell numeric>{item.value}</DataTable.Cell>\n              </DataTable.Row>\n            ))\n          )}\n          <DataTable.Pagination\n            page={page}\n            numberOfPages={totalPages}\n            onPageChange={page => setPage(page)}\n            label={`${page * itemsPerPage + 1} - ${Math.min(\n              page * itemsPerPage + itemsPerPage,\n              totalResults\n            )} of ${totalResults}`}\n          />\n        </DataTable>\n      </ScrollView>\n      <Portal>\n        <FAB.Group\n          open={fabOpened}\n          visible\n          icon={props => <FontAwesome {...props} name=\"gears\" />}\n          actions={[\n            {\n              icon: 'counter',\n              label: 'Configure pagination',\n              onPress: () => setPaginationModalVisible(true),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpened(open)}\n        />\n        <Modal visible={paginationModalVisible} onDismiss={() => setPaginationModalVisible(false)}>\n          <List.Section title=\"Pagination\">\n            <List.Accordion\n              title={`${itemsPerPage} items per page`}\n              left={props => <List.Icon {...props} icon=\"folder\" />}>\n              <List.Item onPress={() => handleSetItemsPerPage(5)} title=\"5 items per page\" />\n              <List.Item onPress={() => handleSetItemsPerPage(10)} title=\"10 items per page\" />\n              <List.Item onPress={() => handleSetItemsPerPage(25)} title=\"25 items per page\" />\n              <List.Item onPress={() => handleSetItemsPerPage(50)} title=\"50 items per page\" />\n            </List.Accordion>\n          </List.Section>\n        </Modal>\n      </Portal>\n    </View>\n  );\n};\n\ntype StudyDetailsScreenProps = {\n  route: RouteProp<RootStackParamList, 'Results'>;\n  navigation: StackNavigationProp<RootStackParamList>;\n};\n\nconst StudyDetailsScreen = ({ route }: StudyDetailsScreenProps) => {\n  const { study } = route.params;\n\n  return (\n    <BaseScreen>\n      <View style={styles.row}>\n        <Subheading>Id</Subheading>\n        <Subheading>{study.id}</Subheading>\n      </View>\n      <View style={styles.row}>\n        <Subheading>Created</Subheading>\n        <Subheading>{moment(study.created).format('DD MMM YYYY HH:mm')}</Subheading>\n      </View>\n      <View style={styles.row}>\n        <Subheading>State</Subheading>\n        <Subheading>{study.state}</Subheading>\n      </View>\n      <ResultsList studyId={study.id} />\n    </BaseScreen>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n});\n\nexport default StudyDetailsScreen;\n","import { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { withTheme } from 'react-native-paper';\n\nimport { Study } from '../data/models/Study';\nimport AddStudyScreen from '../screens/AddStudyScreen';\nimport ModifyStudyScreen from '../screens/ModifyStudyScreen';\nimport ResultsScreen from '../screens/ResultsScreen';\nimport StudiesScreen from '../screens/StudiesScreen';\nimport StudyDetailsScreen from '../screens/StudyDetailsScreen';\n\nexport type RootStackParamList = {\n  Studies: undefined;\n  Results: { study: Study };\n  ModifyStudy: { study: Study; onSubmit: () => Promise<void> };\n  AddStudy: { onSubmit: () => Promise<void> };\n  StudyDetails: { study: Study };\n};\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nconst NavigationProvider = ({ theme }) => (\n  <NavigationContainer>\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: theme.colors.primary,\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}>\n      <Stack.Screen name=\"Studies\" component={StudiesScreen} />\n      <Stack.Screen\n        name=\"Results\"\n        options={({ route }) => ({ title: route.params.study.name })}\n        component={ResultsScreen}\n      />\n      <Stack.Screen\n        name=\"ModifyStudy\"\n        options={({ route }) => ({\n          title: `Modify ${route.params.study.name}`,\n        })}\n        component={ModifyStudyScreen}\n      />\n      <Stack.Screen\n        name=\"AddStudy\"\n        options={() => ({\n          title: `Add a new study`,\n        })}\n        component={AddStudyScreen}\n      />\n      <Stack.Screen\n        name=\"StudyDetails\"\n        options={({ route }) => ({\n          title: `${route.params.study.name} details`,\n        })}\n        component={StudyDetailsScreen}\n      />\n    </Stack.Navigator>\n  </NavigationContainer>\n);\n\nexport default withTheme(NavigationProvider);\n","import { DefaultTheme } from 'react-native-paper';\n\nconst LightTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#1a237e',\n    accent: '#000051',\n    backdrop: 'rgba(255, 255, 255, 0.92)',\n  },\n};\n\nexport default LightTheme;\n","import * as React from 'react';\nimport { Platform } from 'react-native';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport NavigationProvider from './providers/NavigationProvider';\nimport LightTheme from './theming/LightTheme';\n\nexport default function App() {\n  return (\n    <PaperProvider theme={LightTheme}>\n      <>\n        {Platform.OS === 'web' ? (\n          <style type=\"text/css\">{`\n        @font-face {\n          font-family: 'MaterialCommunityIcons';\n          src: url(${require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf')}) format('truetype');\n        }\n      `}</style>\n        ) : null}\n        <NavigationProvider />\n      </>\n    </PaperProvider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./af\": 261,\n\t\"./af.js\": 261,\n\t\"./ar\": 262,\n\t\"./ar-dz\": 263,\n\t\"./ar-dz.js\": 263,\n\t\"./ar-kw\": 264,\n\t\"./ar-kw.js\": 264,\n\t\"./ar-ly\": 265,\n\t\"./ar-ly.js\": 265,\n\t\"./ar-ma\": 266,\n\t\"./ar-ma.js\": 266,\n\t\"./ar-sa\": 267,\n\t\"./ar-sa.js\": 267,\n\t\"./ar-tn\": 268,\n\t\"./ar-tn.js\": 268,\n\t\"./ar.js\": 262,\n\t\"./az\": 269,\n\t\"./az.js\": 269,\n\t\"./be\": 270,\n\t\"./be.js\": 270,\n\t\"./bg\": 271,\n\t\"./bg.js\": 271,\n\t\"./bm\": 272,\n\t\"./bm.js\": 272,\n\t\"./bn\": 273,\n\t\"./bn.js\": 273,\n\t\"./bo\": 274,\n\t\"./bo.js\": 274,\n\t\"./br\": 275,\n\t\"./br.js\": 275,\n\t\"./bs\": 276,\n\t\"./bs.js\": 276,\n\t\"./ca\": 277,\n\t\"./ca.js\": 277,\n\t\"./cs\": 278,\n\t\"./cs.js\": 278,\n\t\"./cv\": 279,\n\t\"./cv.js\": 279,\n\t\"./cy\": 280,\n\t\"./cy.js\": 280,\n\t\"./da\": 281,\n\t\"./da.js\": 281,\n\t\"./de\": 282,\n\t\"./de-at\": 283,\n\t\"./de-at.js\": 283,\n\t\"./de-ch\": 284,\n\t\"./de-ch.js\": 284,\n\t\"./de.js\": 282,\n\t\"./dv\": 285,\n\t\"./dv.js\": 285,\n\t\"./el\": 286,\n\t\"./el.js\": 286,\n\t\"./en-SG\": 287,\n\t\"./en-SG.js\": 287,\n\t\"./en-au\": 288,\n\t\"./en-au.js\": 288,\n\t\"./en-ca\": 289,\n\t\"./en-ca.js\": 289,\n\t\"./en-gb\": 290,\n\t\"./en-gb.js\": 290,\n\t\"./en-ie\": 291,\n\t\"./en-ie.js\": 291,\n\t\"./en-il\": 292,\n\t\"./en-il.js\": 292,\n\t\"./en-nz\": 293,\n\t\"./en-nz.js\": 293,\n\t\"./eo\": 294,\n\t\"./eo.js\": 294,\n\t\"./es\": 295,\n\t\"./es-do\": 296,\n\t\"./es-do.js\": 296,\n\t\"./es-us\": 297,\n\t\"./es-us.js\": 297,\n\t\"./es.js\": 295,\n\t\"./et\": 298,\n\t\"./et.js\": 298,\n\t\"./eu\": 299,\n\t\"./eu.js\": 299,\n\t\"./fa\": 300,\n\t\"./fa.js\": 300,\n\t\"./fi\": 301,\n\t\"./fi.js\": 301,\n\t\"./fo\": 302,\n\t\"./fo.js\": 302,\n\t\"./fr\": 303,\n\t\"./fr-ca\": 304,\n\t\"./fr-ca.js\": 304,\n\t\"./fr-ch\": 305,\n\t\"./fr-ch.js\": 305,\n\t\"./fr.js\": 303,\n\t\"./fy\": 306,\n\t\"./fy.js\": 306,\n\t\"./ga\": 307,\n\t\"./ga.js\": 307,\n\t\"./gd\": 308,\n\t\"./gd.js\": 308,\n\t\"./gl\": 309,\n\t\"./gl.js\": 309,\n\t\"./gom-latn\": 310,\n\t\"./gom-latn.js\": 310,\n\t\"./gu\": 311,\n\t\"./gu.js\": 311,\n\t\"./he\": 312,\n\t\"./he.js\": 312,\n\t\"./hi\": 313,\n\t\"./hi.js\": 313,\n\t\"./hr\": 314,\n\t\"./hr.js\": 314,\n\t\"./hu\": 315,\n\t\"./hu.js\": 315,\n\t\"./hy-am\": 316,\n\t\"./hy-am.js\": 316,\n\t\"./id\": 317,\n\t\"./id.js\": 317,\n\t\"./is\": 318,\n\t\"./is.js\": 318,\n\t\"./it\": 319,\n\t\"./it-ch\": 320,\n\t\"./it-ch.js\": 320,\n\t\"./it.js\": 319,\n\t\"./ja\": 321,\n\t\"./ja.js\": 321,\n\t\"./jv\": 322,\n\t\"./jv.js\": 322,\n\t\"./ka\": 323,\n\t\"./ka.js\": 323,\n\t\"./kk\": 324,\n\t\"./kk.js\": 324,\n\t\"./km\": 325,\n\t\"./km.js\": 325,\n\t\"./kn\": 326,\n\t\"./kn.js\": 326,\n\t\"./ko\": 327,\n\t\"./ko.js\": 327,\n\t\"./ku\": 328,\n\t\"./ku.js\": 328,\n\t\"./ky\": 329,\n\t\"./ky.js\": 329,\n\t\"./lb\": 330,\n\t\"./lb.js\": 330,\n\t\"./lo\": 331,\n\t\"./lo.js\": 331,\n\t\"./lt\": 332,\n\t\"./lt.js\": 332,\n\t\"./lv\": 333,\n\t\"./lv.js\": 333,\n\t\"./me\": 334,\n\t\"./me.js\": 334,\n\t\"./mi\": 335,\n\t\"./mi.js\": 335,\n\t\"./mk\": 336,\n\t\"./mk.js\": 336,\n\t\"./ml\": 337,\n\t\"./ml.js\": 337,\n\t\"./mn\": 338,\n\t\"./mn.js\": 338,\n\t\"./mr\": 339,\n\t\"./mr.js\": 339,\n\t\"./ms\": 340,\n\t\"./ms-my\": 341,\n\t\"./ms-my.js\": 341,\n\t\"./ms.js\": 340,\n\t\"./mt\": 342,\n\t\"./mt.js\": 342,\n\t\"./my\": 343,\n\t\"./my.js\": 343,\n\t\"./nb\": 344,\n\t\"./nb.js\": 344,\n\t\"./ne\": 345,\n\t\"./ne.js\": 345,\n\t\"./nl\": 346,\n\t\"./nl-be\": 347,\n\t\"./nl-be.js\": 347,\n\t\"./nl.js\": 346,\n\t\"./nn\": 348,\n\t\"./nn.js\": 348,\n\t\"./pa-in\": 349,\n\t\"./pa-in.js\": 349,\n\t\"./pl\": 350,\n\t\"./pl.js\": 350,\n\t\"./pt\": 351,\n\t\"./pt-br\": 352,\n\t\"./pt-br.js\": 352,\n\t\"./pt.js\": 351,\n\t\"./ro\": 353,\n\t\"./ro.js\": 353,\n\t\"./ru\": 354,\n\t\"./ru.js\": 354,\n\t\"./sd\": 355,\n\t\"./sd.js\": 355,\n\t\"./se\": 356,\n\t\"./se.js\": 356,\n\t\"./si\": 357,\n\t\"./si.js\": 357,\n\t\"./sk\": 358,\n\t\"./sk.js\": 358,\n\t\"./sl\": 359,\n\t\"./sl.js\": 359,\n\t\"./sq\": 360,\n\t\"./sq.js\": 360,\n\t\"./sr\": 361,\n\t\"./sr-cyrl\": 362,\n\t\"./sr-cyrl.js\": 362,\n\t\"./sr.js\": 361,\n\t\"./ss\": 363,\n\t\"./ss.js\": 363,\n\t\"./sv\": 364,\n\t\"./sv.js\": 364,\n\t\"./sw\": 365,\n\t\"./sw.js\": 365,\n\t\"./ta\": 366,\n\t\"./ta.js\": 366,\n\t\"./te\": 367,\n\t\"./te.js\": 367,\n\t\"./tet\": 368,\n\t\"./tet.js\": 368,\n\t\"./tg\": 369,\n\t\"./tg.js\": 369,\n\t\"./th\": 370,\n\t\"./th.js\": 370,\n\t\"./tl-ph\": 371,\n\t\"./tl-ph.js\": 371,\n\t\"./tlh\": 372,\n\t\"./tlh.js\": 372,\n\t\"./tr\": 373,\n\t\"./tr.js\": 373,\n\t\"./tzl\": 374,\n\t\"./tzl.js\": 374,\n\t\"./tzm\": 375,\n\t\"./tzm-latn\": 376,\n\t\"./tzm-latn.js\": 376,\n\t\"./tzm.js\": 375,\n\t\"./ug-cn\": 377,\n\t\"./ug-cn.js\": 377,\n\t\"./uk\": 378,\n\t\"./uk.js\": 378,\n\t\"./ur\": 379,\n\t\"./ur.js\": 379,\n\t\"./uz\": 380,\n\t\"./uz-latn\": 381,\n\t\"./uz-latn.js\": 381,\n\t\"./uz.js\": 380,\n\t\"./vi\": 382,\n\t\"./vi.js\": 382,\n\t\"./x-pseudo\": 383,\n\t\"./x-pseudo.js\": 383,\n\t\"./yo\": 384,\n\t\"./yo.js\": 384,\n\t\"./zh-cn\": 385,\n\t\"./zh-cn.js\": 385,\n\t\"./zh-hk\": 386,\n\t\"./zh-hk.js\": 386,\n\t\"./zh-tw\": 387,\n\t\"./zh-tw.js\": 387\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 628;"],"sourceRoot":""}